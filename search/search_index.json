{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"01_importance/","text":"What is Fullstack Developer? \ud83d\udcbb \u00b6 A full stack web developer is a person who can develop both client-end to server-end software. Introduction to Fullstack \u00b6 With each of the six chapters, we\u2019ll walk through creating a fullstack that utilizes TigerGraph Cloud\u2019s COVID-19 Analysis Starter Kit to visualize, interact with, and gain insights into South Korea\u2019s disease spread. By the end of this tutorial, you\u2019ll have the tools necessary to create and deploy your very own full-stack application using TigerGraph!","title":"Why Fullstack"},{"location":"01_importance/#what-is-fullstack-developer","text":"A full stack web developer is a person who can develop both client-end to server-end software.","title":"What is Fullstack Developer? \ud83d\udcbb"},{"location":"01_importance/#introduction-to-fullstack","text":"With each of the six chapters, we\u2019ll walk through creating a fullstack that utilizes TigerGraph Cloud\u2019s COVID-19 Analysis Starter Kit to visualize, interact with, and gain insights into South Korea\u2019s disease spread. By the end of this tutorial, you\u2019ll have the tools necessary to create and deploy your very own full-stack application using TigerGraph!","title":"Introduction to Fullstack"},{"location":"02_application/","text":"Fullstack COVID-19 Tracker \u00b6 TODO: Coming soon!","title":"Finished Product"},{"location":"02_application/#fullstack-covid-19-tracker","text":"TODO: Coming soon!","title":"Fullstack COVID-19 Tracker"},{"location":"03_examples/","text":"Exquisite Examples \ud83e\udd73 \u00b6 We've established the power of fullstack and TigerGraph. To further solidify these claims, we can take a look at the following applications put together using TigerGraph \ud83d\ude0a. New feature, coming soon! If you wish to feature your applications here, make sure to be on the lookout for a submission form under the Community tab. Currently in the works! COVID-19 Tracker \u00b6 TODO: Coming soon! TigerGraph C360 \u00b6 TODO: Coming soon! Want to learn how to create your own? Make sure to check out the Course Chapters tab. Happy developing! \ud83e\udd73\ud83e\udd73\ud83e\udd73","title":"Exquisite Examples"},{"location":"03_examples/#exquisite-examples","text":"We've established the power of fullstack and TigerGraph. To further solidify these claims, we can take a look at the following applications put together using TigerGraph \ud83d\ude0a. New feature, coming soon! If you wish to feature your applications here, make sure to be on the lookout for a submission form under the Community tab. Currently in the works!","title":"Exquisite Examples \ud83e\udd73"},{"location":"03_examples/#covid-19-tracker","text":"TODO: Coming soon!","title":"COVID-19 Tracker"},{"location":"03_examples/#tigergraph-c360","text":"TODO: Coming soon! Want to learn how to create your own? Make sure to check out the Course Chapters tab. Happy developing! \ud83e\udd73\ud83e\udd73\ud83e\udd73","title":"TigerGraph C360"},{"location":"04_resources/","text":"All the external resources from Course Chapters , all in one place. \ud83e\uddd0 Ch 01 - Introduction \ufe0f \u00b6 Ch 02 - Environment Setup \u00b6 Ch 03 - Frontend Design \u00b6 Ch 04 - Creating Queries \u00b6 Ch 05 - Middleware \u00b6 Ch 06 - Fetching Data \u00b6 Ch 07 - Deployment \u00b6 Misc - Additional Resources \u00b6","title":"Resources"},{"location":"04_resources/#ch-01-introduction","text":"","title":"Ch 01 - Introduction \ufe0f"},{"location":"04_resources/#ch-02-environment-setup","text":"","title":"Ch 02 - Environment Setup"},{"location":"04_resources/#ch-03-frontend-design","text":"","title":"Ch 03 - Frontend Design"},{"location":"04_resources/#ch-04-creating-queries","text":"","title":"Ch 04 - Creating Queries"},{"location":"04_resources/#ch-05-middleware","text":"","title":"Ch 05 - Middleware"},{"location":"04_resources/#ch-06-fetching-data","text":"","title":"Ch 06 - Fetching Data"},{"location":"04_resources/#ch-07-deployment","text":"","title":"Ch 07 - Deployment"},{"location":"04_resources/#misc-additional-resources","text":"","title":"Misc - Additional Resources"},{"location":"05_community/","text":"TigerGraph Community \u00b6 Community Fourm \u00b6 TG Discord Chat \u00b6 Use the #general channel for casual conversations around TigerGraph Use the #support channel for general questions or discussion about TigerGraph Use the #tools channel for questions about TigerGraph community tools Use the #app-showcase channel for showing the things you build Use the #articles-blogs-news channel for posting interesting things you find on the web There are many other channels available, check the channel list Quasar CLI Community \u00b6 TODO: Coming soon!","title":"Get Connected"},{"location":"05_community/#tigergraph-community","text":"","title":"TigerGraph Community"},{"location":"05_community/#community-fourm","text":"","title":" Community Fourm"},{"location":"05_community/#tg-discord-chat","text":"Use the #general channel for casual conversations around TigerGraph Use the #support channel for general questions or discussion about TigerGraph Use the #tools channel for questions about TigerGraph community tools Use the #app-showcase channel for showing the things you build Use the #articles-blogs-news channel for posting interesting things you find on the web There are many other channels available, check the channel list","title":"  TG Discord Chat"},{"location":"05_community/#quasar-cli-community","text":"TODO: Coming soon!","title":"Quasar CLI Community"},{"location":"course/01_notes/","text":"Chapter 01 - Environment Setup \u00b6 Introduction \u00b6 Now that we have covered the high-level design of the application, we are ready to set up our local development environment and start creating our TigerGraph Fullstack App. In this tutorial, we will use macOS. However, nearly every code section has Windows equivalents and Linux equivalents. For Windows reference, check out this page ! Trusted Resources \u00b6 Before beginning, it\u2019s important to choose reliable sources to learn from. Just like it's important to get your news from reputable sources, it's important to get your technical information from tried and trusted sources. Here are some of our personal favorites: Tools \u00b6 The HTML/CSS/JS For anything to do with HTML, CSS, or JavaScript, Mozilla's MDN is our go-to. We literally have it open all the time \ud83d\ude05.It's a good idea to head directly to MDN\u2019s GitHub page or their official documentation. It's best to head straight to the source. In this case, we will be using framework libraries like ReactJS and Antv G6. The Browser Our recommendation is Chrome. The extension tools are amazing and the team behind them are amazing too. We will use the JSON Formatter extension as well.It can be installed via the following hyperlink . The Editor Our recommendation is Visual Studio Code. It's free, open-source, and works well on Mac, Linux, and Windows. Perhaps one of the best features of VSCode is it has a huge amount of available plugins to choose from. Feel free to take a look! If you're not feeling VSCode, two other editors that are similar in their offering are Sublime Text 3 and Atom . Both are great tools! Both are free to download. However, Sublime requires a subscription basis of $65 in order to gain business licenses. If you want a more complete offering, you may investigate using an integrated development environment (commonly called an IDE.) The reigning, best IDE for front-end development is WebStorm . WebStorm is a very powerful IDE that has a lot of features and tools built into it. It aims to be more than just an editor; it aims to be the entire development suite. Great tool! The Terminal You will have to use a terminal, but it\u2019s less scary than it seems, we promise! For the shell, we are going to use bash . You don't need to install it unless you're using Windows (then use these steps to enable it). It's 99% already there on your computer unless you're using some obscure flavor of Linux. Whenever you open your Mac terminal, it'll be running bash by default unless it has been changed. To remedy any command, check out this hyperlink! However, there are other options as well. The reason we use bash is that it is so prevalent. Bash is everywhere. Everything you Google will have the answers written in bash. Other shell people swear by is zsh . All very cool but we recommend looking at them later. Node.js Node.js is a runtime built on top of Chrome's V8. It allows you to develop apps in JavaScript outside of the browser. It's single-threaded non-blocking and asynchronous. This is achieved by the use of an event loop at the core of Node.js. If you know JS then you already know how to develop with Node.js! Let\u2019s take a closer look... For Windows If you're running Windows and not using Windows Subsystem Linux (WSL), I recommend you use the official installer from the Node.js site. Make sure to choose the latest LTS version. For Non-Windows If you're not on Windows or you are using WSL, we recommend installing Node.js with NVM (node version manager) . NVM allows you to install many versions of Node.js at once and switch whenever you may need to. Additionally, NVM installs Node.js in a folder that will not have permission errors that you would otherwise run into with the official installer. Once you have nvm installed, you need to install a Node version. You can download the latest LTS version with this command. nvm install --lts Frontend \u00b6 With the tool installed, we are now ready to create a quasar project folder! First, it\u2019s good practice to create a bigger scope project folder named tigergraph_fullstack . $ mkdir tigergraph_fullstack $ cd tigergraph_full Next, we create a project folder with Quasar CLI: tigergraph_fullstack$ quasar create front ? Project name (internal usage for dev) front ? Project product name (must start with letter if building mobile apps) Quasar App ? Project description A Quasar Framework app ? Author ? Pick your CSS preprocessor: SCSS ? Check the features needed for your project: ESLint (recommended), Vuex, Axios ? Pick an ESLint preset: Standard ? Continue to install project dependencies after the project has been created? (recommended) NPM Now, we can open our tigergraph_fullstack project with vscode and open the terminal inside vscode as well. This can be done with a shortcut: ctrl + ` (for windows) or cmd + ` (for mac) Without further ado, let\u2019s start our quasar project! tigergraph_fullstack$ cd front tigergraph_fullstack$ quasar dev App \u2022 READY \u2022 Compiled: \"UI\" \u00bb App dir........... /Users/username/Desktop/tigergraph_fullstack/front \u00bb App URL........... http://localhost:8080 http://192.168.50.45:8080 http://169.254.99.222:8080 http://192.168.2.1:8080 \u00bb Dev mode.......... spa \u00bb Pkg quasar........ v2.0.4 \u00bb Pkg @quasar/app... v3.1.0 \u00bb Transpiled JS..... yes (Babel) App \u2022 Opening default browser at http://localhost:8080 With the above lines, we have created our frontend project folder named front, and we have also run the project by using the command \u201cquasar dev\u201d inside the project folder (front). Now, we can use a browser to open the project with URL: http://localhost:8080 Awesome! Next, we will use some libraries to add to our fullstack app, so let\u2019s install them inside the quasar project folder (front). To do this, we can run the following. tigergraph_fullstack/front$ npm i echarts Neat! Next up, let\u2019s examine the middleware, an essential part of our project. Middleware \u00b6 pyTigerGraph \u00b6 FastAPI \u00b6","title":"Chapter 01 - Environment Setup"},{"location":"course/01_notes/#chapter-01-environment-setup","text":"","title":"Chapter 01 - Environment Setup"},{"location":"course/01_notes/#introduction","text":"Now that we have covered the high-level design of the application, we are ready to set up our local development environment and start creating our TigerGraph Fullstack App. In this tutorial, we will use macOS. However, nearly every code section has Windows equivalents and Linux equivalents. For Windows reference, check out this page !","title":"Introduction"},{"location":"course/01_notes/#trusted-resources","text":"Before beginning, it\u2019s important to choose reliable sources to learn from. Just like it's important to get your news from reputable sources, it's important to get your technical information from tried and trusted sources. Here are some of our personal favorites:","title":"Trusted Resources"},{"location":"course/01_notes/#tools","text":"The HTML/CSS/JS For anything to do with HTML, CSS, or JavaScript, Mozilla's MDN is our go-to. We literally have it open all the time \ud83d\ude05.It's a good idea to head directly to MDN\u2019s GitHub page or their official documentation. It's best to head straight to the source. In this case, we will be using framework libraries like ReactJS and Antv G6. The Browser Our recommendation is Chrome. The extension tools are amazing and the team behind them are amazing too. We will use the JSON Formatter extension as well.It can be installed via the following hyperlink . The Editor Our recommendation is Visual Studio Code. It's free, open-source, and works well on Mac, Linux, and Windows. Perhaps one of the best features of VSCode is it has a huge amount of available plugins to choose from. Feel free to take a look! If you're not feeling VSCode, two other editors that are similar in their offering are Sublime Text 3 and Atom . Both are great tools! Both are free to download. However, Sublime requires a subscription basis of $65 in order to gain business licenses. If you want a more complete offering, you may investigate using an integrated development environment (commonly called an IDE.) The reigning, best IDE for front-end development is WebStorm . WebStorm is a very powerful IDE that has a lot of features and tools built into it. It aims to be more than just an editor; it aims to be the entire development suite. Great tool! The Terminal You will have to use a terminal, but it\u2019s less scary than it seems, we promise! For the shell, we are going to use bash . You don't need to install it unless you're using Windows (then use these steps to enable it). It's 99% already there on your computer unless you're using some obscure flavor of Linux. Whenever you open your Mac terminal, it'll be running bash by default unless it has been changed. To remedy any command, check out this hyperlink! However, there are other options as well. The reason we use bash is that it is so prevalent. Bash is everywhere. Everything you Google will have the answers written in bash. Other shell people swear by is zsh . All very cool but we recommend looking at them later. Node.js Node.js is a runtime built on top of Chrome's V8. It allows you to develop apps in JavaScript outside of the browser. It's single-threaded non-blocking and asynchronous. This is achieved by the use of an event loop at the core of Node.js. If you know JS then you already know how to develop with Node.js! Let\u2019s take a closer look... For Windows If you're running Windows and not using Windows Subsystem Linux (WSL), I recommend you use the official installer from the Node.js site. Make sure to choose the latest LTS version. For Non-Windows If you're not on Windows or you are using WSL, we recommend installing Node.js with NVM (node version manager) . NVM allows you to install many versions of Node.js at once and switch whenever you may need to. Additionally, NVM installs Node.js in a folder that will not have permission errors that you would otherwise run into with the official installer. Once you have nvm installed, you need to install a Node version. You can download the latest LTS version with this command. nvm install --lts","title":"Tools"},{"location":"course/01_notes/#frontend","text":"With the tool installed, we are now ready to create a quasar project folder! First, it\u2019s good practice to create a bigger scope project folder named tigergraph_fullstack . $ mkdir tigergraph_fullstack $ cd tigergraph_full Next, we create a project folder with Quasar CLI: tigergraph_fullstack$ quasar create front ? Project name (internal usage for dev) front ? Project product name (must start with letter if building mobile apps) Quasar App ? Project description A Quasar Framework app ? Author ? Pick your CSS preprocessor: SCSS ? Check the features needed for your project: ESLint (recommended), Vuex, Axios ? Pick an ESLint preset: Standard ? Continue to install project dependencies after the project has been created? (recommended) NPM Now, we can open our tigergraph_fullstack project with vscode and open the terminal inside vscode as well. This can be done with a shortcut: ctrl + ` (for windows) or cmd + ` (for mac) Without further ado, let\u2019s start our quasar project! tigergraph_fullstack$ cd front tigergraph_fullstack$ quasar dev App \u2022 READY \u2022 Compiled: \"UI\" \u00bb App dir........... /Users/username/Desktop/tigergraph_fullstack/front \u00bb App URL........... http://localhost:8080 http://192.168.50.45:8080 http://169.254.99.222:8080 http://192.168.2.1:8080 \u00bb Dev mode.......... spa \u00bb Pkg quasar........ v2.0.4 \u00bb Pkg @quasar/app... v3.1.0 \u00bb Transpiled JS..... yes (Babel) App \u2022 Opening default browser at http://localhost:8080 With the above lines, we have created our frontend project folder named front, and we have also run the project by using the command \u201cquasar dev\u201d inside the project folder (front). Now, we can use a browser to open the project with URL: http://localhost:8080 Awesome! Next, we will use some libraries to add to our fullstack app, so let\u2019s install them inside the quasar project folder (front). To do this, we can run the following. tigergraph_fullstack/front$ npm i echarts Neat! Next up, let\u2019s examine the middleware, an essential part of our project.","title":"Frontend"},{"location":"course/01_notes/#middleware","text":"","title":"Middleware"},{"location":"course/01_notes/#pytigergraph","text":"","title":"pyTigerGraph"},{"location":"course/01_notes/#fastapi","text":"","title":"FastAPI"},{"location":"course/02_notes/","text":"Installation, First Dash App \u00b6","title":"Chapter 02 - Frontend Design"},{"location":"course/02_notes/#installation-first-dash-app","text":"","title":"Installation, First Dash App"},{"location":"course/03_notes/","text":"Installation, First Dash App \u00b6","title":"Chapter 03 - Creating Queries"},{"location":"course/03_notes/#installation-first-dash-app","text":"","title":"Installation, First Dash App"},{"location":"course/04_notes/","text":"Installation, First Dash App \u00b6","title":"Chapter 04 - Middleware"},{"location":"course/04_notes/#installation-first-dash-app","text":"","title":"Installation, First Dash App"},{"location":"course/05_notes/","text":"Installation, First Dash App \u00b6","title":"Chapter 05 - Fetching Data"},{"location":"course/05_notes/#installation-first-dash-app","text":"","title":"Installation, First Dash App"},{"location":"course/06_notes/","text":"Installation, First Dash App \u00b6","title":"Chapter 06 - Deployment"},{"location":"course/06_notes/#installation-first-dash-app","text":"","title":"Installation, First Dash App"}]}